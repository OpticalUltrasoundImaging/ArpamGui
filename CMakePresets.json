{
  "version": 3,
  "cmakeMinimumRequired": {
    "major": 3,
    "minor": 25,
    "patch": 0
  },
  "configurePresets": [
    {
      "name": "base",
      "hidden": true,
      "binaryDir": "build/${presetName}",
      "toolchainFile": "$env{VCPKG_ROOT}/scripts/buildsystems/vcpkg.cmake"
    },
    {
      "name": "win64-cl-base",
      "hidden": true,
      "inherits": "base",
      "condition": {
        "type": "equals",
        "lhs": "${hostSystemName}",
        "rhs": "Windows"
      },
      "architecture": {
        "value": "x64",
        "strategy": "external"
      },
      "cacheVariables": {
        "CMAKE_C_COMPILER": "cl.exe",
        "CMAKE_CXX_COMPILER": "cl.exe",
        "CMAKE_C_FLAGS": "/EHsc /arch:AVX2",
        "CMAKE_CXX_FLAGS": "/EHsc /arch:AVX2 /Qvec-report:2"
      }
    },
    {
      "name": "win64",
      "displayName": "Visual Studio 2022",
      "description": "Visual Studio 2022 + x64 CL",
      "inherits": "win64-cl-base",
      "generator": "Visual Studio 17 2022"
    },
    {
      "name": "ninja",
      "inherits": "base",
      "displayName": "Ninja Multi-Config",
      "description": "Generic Ninja Multi-Config with no compiler specified",
      "generator": "Ninja Multi-Config"
    },
    {
      "name": "cl",
      "inherits": ["ninja", "win64-cl-base"],
      "displayName": "CL",
      "description": "Ninja Multi-Config + x64 MSVC"
    },
    {
      "name": "cl-vec-report",
      "inherits": "cl",
      "displayName": "CL (with vec report)",
      "description": "Ninja Multi-Config + x64 MSVC (with autovectorizer report)",
      "cacheVariables": {
        "CMAKE_C_FLAGS": "/EHsc /arch:AVX2 /Qvec-report:2",
        "CMAKE_CXX_FLAGS": "/EHsc /arch:AVX2 /Qvec-report:2"
      }
    },
    {
      "name": "clang",
      "inherits": "ninja",
      "displayName": "Clang",
      "description": "Ninja Multi-Config + Clang",
      "cacheVariables": {
        "CMAKE_C_COMPILER": "clang",
        "CMAKE_CXX_COMPILER": "clang++",
        "CMAKE_CXX_FLAGS": "-fno-math-errno -ffast-math -Rpass=loop-vectorize -Rpass-missed=loop-vectorize -Rpass-analysis=loop-vectorize"
      }
    },
    {
      "name": "clang-x64",
      "inherits": "ninja",
      "displayName": "Clang (x64)",
      "description": "Ninja Multi-Config + Clang (with Haswell instructions)",
      "cacheVariables": {
        "CMAKE_C_COMPILER": "clang",
        "CMAKE_CXX_COMPILER": "clang++",
        "CMAKE_CXX_FLAGS": "-march=haswell -fno-math-errno -ffast-math -Rpass=loop-vectorize -Rpass-missed=loop-vectorize -Rpass-analysis=loop-vectorize"
      }
    }
  ],
  "buildPresets": [
    {
      "name": "win64-release",
      "displayName": "Win64 Release",
      "configurePreset": "win64",
      "configuration": "Release"
    },
    {
      "name": "win64-relwithdebinfo",
      "displayName": "Win64 RelWithDebInfo",
      "configurePreset": "win64",
      "configuration": "RelWithDebInfo"
    },
    {
      "name": "win64-debug",
      "displayName": "Win64 Debug",
      "configurePreset": "win64",
      "configuration": "Debug"
    },
    {
      "name": "ninja-debug",
      "displayName": "Ninja Debug",
      "configurePreset": "ninja",
      "configuration": "Debug"
    },
    {
      "name": "ninja-relwithdebinfo",
      "displayName": "Ninja RelWithDebInfo",
      "configurePreset": "ninja",
      "configuration": "RelWithDebInfo"
    },
    {
      "name": "ninja-release",
      "displayName": "Ninja Release",
      "configurePreset": "ninja",
      "configuration": "Release"
    },
    {
      "name": "clang-debug",
      "displayName": "Clang Debug",
      "configurePreset": "clang",
      "configuration": "Debug"
    },
    {
      "name": "clang-relwithdebinfo",
      "displayName": "Clang RelWithDebInfo",
      "configurePreset": "clang",
      "configuration": "RelWithDebInfo"
    },
    {
      "name": "clang-release",
      "displayName": "Clang Release",
      "configurePreset": "clang",
      "configuration": "Release"
    },
    {
      "name": "clang-x64-release",
      "displayName": "Clang Release",
      "configurePreset": "clang-x64",
      "configuration": "Release"
    },
    {
      "name": "clang-x64-relwithdebinfo",
      "displayName": "Clang RelWithDebInfo",
      "configurePreset": "clang-x64",
      "configuration": "RelWithDebInfo"
    },
    {
      "name": "cl-debug",
      "displayName": "CL Debug",
      "configurePreset": "cl",
      "configuration": "Debug"
    },
    {
      "name": "cl-relwithdebinfo",
      "displayName": "CL RelWithDebInfo",
      "configurePreset": "cl",
      "configuration": "RelWithDebInfo"
    },
    {
      "name": "cl-release",
      "displayName": "CL Release",
      "configurePreset": "cl",
      "configuration": "Release"
    },
    {
      "name": "cl-vec-report-release",
      "displayName": "CL Release",
      "configurePreset": "cl-vec-report",
      "configuration": "Release"
    }
  ],
  "testPresets": [
    {
      "name": "test-win64-debug",
      "displayName": "Test (Debug)",
      "configuration": "Debug",
      "configurePreset": "win64"
    },
    {
      "name": "test-win64-release",
      "displayName": "Test (Release)",
      "configuration": "Release",
      "configurePreset": "win64"
    },
    {
      "name": "test-ninja-debug",
      "displayName": "Test (Debug)",
      "configuration": "Debug",
      "configurePreset": "ninja"
    },
    {
      "name": "test-ninja-release",
      "displayName": "Test (Release)",
      "configuration": "Release",
      "configurePreset": "ninja"
    },
    {
      "name": "test-clang-debug",
      "displayName": "Test (Debug)",
      "configuration": "Debug",
      "configurePreset": "clang"
    },
    {
      "name": "test-clang-release",
      "displayName": "Test (Release)",
      "configuration": "Release",
      "configurePreset": "clang"
    },
    {
      "name": "test-cl-debug",
      "displayName": "Test (Debug)",
      "configuration": "Debug",
      "configurePreset": "cl"
    },
    {
      "name": "test-cl-release",
      "displayName": "Test (Release)",
      "configuration": "Release",
      "configurePreset": "cl"
    }
  ]
}
